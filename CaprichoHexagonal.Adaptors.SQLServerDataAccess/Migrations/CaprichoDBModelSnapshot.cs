// <auto-generated />
using System;
using CaprichoHexagonal.Adaptors.SQLServerDataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaprichoHexagonal.Adaptors.SQLServerDataAccess.Migrations
{
    [DbContext(typeof(CaprichoDB))]
    partial class CaprichoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Administrador", b =>
                {
                    b.Property<Guid>("administrador_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("reestablecer")
                        .HasColumnType("bit");

                    b.HasKey("administrador_id");

                    b.ToTable("tb_administrador");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Carrito", b =>
                {
                    b.Property<Guid>("cliente_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("cliente_id", "producto_id");

                    b.HasIndex("producto_id");

                    b.ToTable("tb_carrito");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Categoria", b =>
                {
                    b.Property<Guid>("categoria_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.HasKey("categoria_id");

                    b.ToTable("tb_categoria");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("cliente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("reestablecer")
                        .HasColumnType("bit");

                    b.HasKey("cliente_id");

                    b.ToTable("tb_cliente");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Comarca", b =>
                {
                    b.Property<Guid>("comarca_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("municipio_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("comarca_id");

                    b.HasIndex("municipio_id");

                    b.ToTable("tb_comarca");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Departamento", b =>
                {
                    b.Property<Guid>("departamento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("departamento_id");

                    b.ToTable("tb_departamento");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.DetalleVenta", b =>
                {
                    b.Property<Guid>("venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("venta_id", "producto_id");

                    b.HasIndex("producto_id");

                    b.ToTable("tb_detalleventa");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Marca", b =>
                {
                    b.Property<Guid>("marca_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.HasKey("marca_id");

                    b.ToTable("tb_marca");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Municipio", b =>
                {
                    b.Property<Guid>("municipio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("departamento_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("municipio_id");

                    b.HasIndex("departamento_id");

                    b.ToTable("tb_municipio");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Producto", b =>
                {
                    b.Property<Guid>("producto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("categoria_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("marca_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ruta_imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("producto_id");

                    b.HasIndex("categoria_id");

                    b.HasIndex("marca_id");

                    b.ToTable("tb_producto");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Venta", b =>
                {
                    b.Property<Guid>("venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cliente_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("comarca_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_venta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("monto_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total_producto")
                        .HasColumnType("int");

                    b.Property<Guid>("transaccion_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("venta_id");

                    b.HasIndex("cliente_id");

                    b.ToTable("tb_venta");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Carrito", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Producto", "Producto")
                        .WithMany("Carritos")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Comarca", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Municipio", "municipio")
                        .WithMany("Comarcas")
                        .HasForeignKey("municipio_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("municipio");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.DetalleVenta", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Producto", "Producto")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Venta", "Venta")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Municipio", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("departamento_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Producto", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("categoria_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("marca_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Venta", b =>
                {
                    b.HasOne("CaprichoHexagonal.Core.Domain.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Municipio", b =>
                {
                    b.Navigation("Comarcas");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleVentas");
                });

            modelBuilder.Entity("CaprichoHexagonal.Core.Domain.Models.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
